I"~L<h2 id="主要内容">主要内容</h2>
<ul>
  <li><a href="#p1">ABSTRACT</a></li>
  <li><a href="#p2">一、INTRODUCTION</a></li>
  <li><a href="#p3">二、Preliminary</a></li>
  <li><a href="#p4">三、Proposed Model</a></li>
  <li><a href="#p5">四、EXPERIMENT</a></li>
</ul>

<h2 id="参考论文">参考论文：</h2>
<p><a href="https://arxiv.org/pdf/1709.04875v4.pdf">《Spatio-Temporal Graph Convolutional Networks: A Deep Learning Framework for Traffic Forecasting》</a></p>

<h2 id="正文">正文</h2>

<h3 id="abstract"><span id="p1">ABSTRACT</span></h3>
<h4 id="任务objective">任务(Objective)</h4>
<p>提出一个深度学习框架ASTGCN用于处理交通领域的时间序列预测问题。</p>
<h4 id="方法methods对研究的基本设计加以描述">方法(Methods)：对研究的基本设计加以描述。</h4>
<p>不使用正则卷积和递归单元，而是在图上表示问题，并建立具有完整卷积结构的模型，从而使训练速度更快，参数更少。</p>
<h4 id="结果results">结果(Results)</h4>
<p>实验结果表明，STGCN模型通过对多尺度交通网络的建模，有效地捕捉到了综合的时空相关性，并且一直优于现有的研究成果各种实际交通数据集的基线。</p>

<h3 id="一introduction"><span id="p2">一、INTRODUCTION</span></h3>
<h4 id="研究背景和重要性background-and-importance">研究背景和重要性(Background And Importance)</h4>
<p>交通条件和每个人的日常生活息息相关，所以准确的实时的交通预测是非常重要的。</p>
<h4 id="该领域的科研空白挑战description-of-knowledge-gap-or-chanllenge">该领域的科研空白/挑战(Description of knowledge gap or chanllenge)</h4>

<p>传统方法在短时预测上表现良好，但是在长时预测上效果不佳。
以往对中长期交通预测的研究大致可以分为两类：动态建模和数据驱动方法。</p>

<p>动态建模使用数学工具（如微分方程）和物理知识通过计算模拟来描述交通问题。
仿真过程不仅需要复杂的系统编程，而且需要消耗大量的计算能力。</p>

<p>传统的统计学和机器学习模型是两个主要的数据驱动模型的代表。ARIMA……各种常见的问题。</p>

<p>深度学习方法已经广泛且成功地应用到各种交通任务中。各种深度学习地方法balabala,但是这些模型方法都在空间特征提取上有限制，导致
性能下降。</p>

<p>为了充分地利用空间特征，一些方法，例如CNN等balabala也被融合进来。但仍然有各种问题……。</p>

<h4 id="本文的研究课题topic-of-research-paper">本文的研究课题(Topic Of Research Paper)</h4>
<p>为了解决以上问题，作者引进了一些策略来有效地模拟交通流的时间动态和空间依赖性。
为了充分利用空间信息，作者使用一个通用图来建模交通网络。
为了解决循环网络的固有缺陷，作者在时间轴上应用了一个完全卷积结构。</p>

<h4 id="核心方法论和主要发现结果highlight-the-approach-and-highlight-principal-findingsresult">核心方法论和主要发现/结果(Highlight The Approach And Highlight Principal Findings/Result)</h4>
<p>提出了一个最新的框架，时空图卷积网络用语交通预测任务。
据我们所知，在交通研究中，首次应用纯卷积结构从图结构时间序列中同时提取时空特征。
我们在两个真实的交通数据集上评估了我们提出的模型。
实验表明，在多个预设预测长度和网络规模的情况下，该框架的预测性能优于现有的基线。</p>
<h3 id="二preliminary"><span id="p3">二、Preliminary</span></h3>

<h4 id="21-traffic-prediction-on-road-graphs">2.1 Traffic Prediction on Road Graphs</h4>
<p><img src="../../../../../../img/in-post/2020.09/11/Figure 1.jpg" alt="Figure 1" /></p>

<p>交通预测是一个传统的时间序列预测问题，例如给定$M$个时间步的历史观测值预测下一个$H$时间步：</p>

\[\hat{v}_{t+1},\cdots,\hat{v}_{t+H}=\mathop{argmax}\limits_{v_{t+1},\cdots,v_{t+H}} log P(v_{t+1},\cdots,v_{t+H}|v_{t-M+1}，\cdots,v_t)\tag{1}\]

<p>其中，$v_t\in\mathbb{R}^n$是n条路段在时间步$t$的观测值。$v_t$的观测值不是独立的而是通过图中的成对连接来联系的。
因此，数据点$v_t$可以被看做是一个图信号。在时间步$t$,在图$G_t=(V_t,\varepsilon,W)$中，$V_t$是点的集合，
$\varepsilon$是边的集合，$W\in\mathbb{R}^{n\times n}$表示$G_t$的权重邻接矩阵。</p>

<h4 id="22-convolution-on-graphs">2.2 Convolution on Graphs</h4>
<p>规则网格的标准卷积显然不适用于一般图。目前有两种基本方法在探索如何将cnn推广到结构化数据表单。
一种是扩展卷积的空间定义，另一种是在谱域中用图傅里叶变换进行操作。
前一种方法是将顶点重新排列成可以通过常规卷积运算处理的网格形式。
后者引入谱框架将卷积应用于谱域，通常称为谱图卷积。
$*G$表示图卷积操作。当信号$x\in\mathbb{R}^n$与核$\theta$相乘时，</p>

\[\theta*G x=\theta(U\land U^T)x=U\theta(\land U^T)x\tag{2}\]

<p>其中，图傅里叶偏移$U\in\mathbb{R}^{n\times n}$是拉普拉斯规范化图$L=I_n-D^{-\frac{1}{2}}WD^{-\frac{1}{2}}=U\land U^T\in\mathbb{R}^{n\times n}$特征向量矩阵,
$I_n$是单位矩阵，$D^{-\frac{1}{2}}WD^{-\frac{1}{2}}$是对角矩阵，$D_{ii}=\sum_jW_{ij}$。
$\land\in\mathbb{n\times n}$是$L$的特征矩阵的对角矩阵，傅里叶$\theta(\land)$也是一个对角矩阵。</p>
<h3 id="三proposed-model"><span id="p4">三、Proposed Model</span></h3>
<h4 id="network-architecture">Network Architecture</h4>
<p>如图2所示，STGCN由几个时空卷积块组成，每个卷积块之间有两个门控序列卷积层和一个空间图形卷积层，形成一个“三明治”结构。每个模块的详细说明如下。</p>

<p><img src="../../../../../../img/in-post/2020.09/11/Figure 2.jpg" alt="Figure 2" /></p>
<h4 id="graph-cnns-for-extracting-spatial-features">Graph CNNs for Extracting Spatial Features</h4>
<p>交通网络通常被组织成图结构。用数学方法把道路网表示成图形是自然合理的。
然而以前的研究忽略了交通网络的空间属性：网络的连接性和全局性被忽略了。
在栅格中的2D卷积虽然可以粗粒度的捕捉到局部的空间相关性。
图卷积直接应用于图结构数据，以提取空间域中有意义的模式和特征。</p>

<h4 id="chebyshev-polynomials-approximation">Chebyshev Polynomials Approximation</h4>
<p>为了局部化卷积核和减少参数数量，$\theta$可以被$\land$的多项式$\theta(\land)=\sum_{k=0}^{K-1}\theta_{k}\land^k$限制，
其中$\theta\in\mathbb{R}^K$是多项式协方差的向量。$K$是图卷积核的大小，它决定了中心节点的最大卷积半径。
Chebyshev 多项式$T_k(x)$一般用于近似$\theta(\land)\approx\sum_{k=0}^{K-1}\theta_kT_k(\tilde{\land})$的K-1阶截断展开卷积核。
其中，$\tilde{\land}=2\land/\lambda_{max}-I_n$，$\lambda_{max}$表示$L$的最大特征值。
图卷积可以被重写为：</p>

<p>\(\theta*g x=\theta(L)x\approx\sum_{k=0}^{K-1}\theta_kT_k(\tilde{L})x\tag{3}\)，
其中，$T_k(\tilde{L})\in\mathbb{R}^{n\times n}$是在Laplacian$\tilde{L}=2L/\lambda_{max}-I_n$的K阶展开。</p>

<h4 id="1st-order-approximation">$1^{st}$-order Approximation</h4>
<p>用图的拉普拉斯一阶近似叠加多个局部化图卷积层，可以定义一个分层线性公式。由于网络的缩放和规范化，
我们可以进一步假设$\lambda_{max}\approx2$,因此公式3可以简化为</p>

\[\theta*g x\approx\theta_0x+\theta_1(\frac{2}{\lambda_{max}}L-I_n)x\]

\[\approx\theta_0x-\theta_1(D^{-\frac{1}{2}}WD^{-\frac{1}{2}})x\tag{4}\]

<p>其中，$\theta_0,\theta_1$是核的共享参数。为了约束参数和稳定数值性能，$\theta_0$和$\theta_1$
被一个单一参数$\theta$取代，其中，$\theta=\theta_0=-\theta_1$。$W$和$D$被重新规范化，
$\tilde{W}=W+I_n$，$\tilde{D}_{ii}=\sum_j\tilde{ij}$。因此，图卷积可以被表示为：</p>

\[\theta*g x=\theta(I_n+D^{-\frac{1}{2}}WD^{-\frac{1}{2}})x\]

\[=\theta(\tilde{D}^{-\frac{1}{2}}\tilde{W}\tilde{D}^{-\frac{1}{2}})x\tag{5}\]

<p>在垂直方向上应用一阶近似的图卷积堆栈，其效果与K局部卷积在水平方向上的效果相似，所有这些卷积都利用中心节点的（K−1）阶邻域的信息。在这种情况下，K是模型中连续滤波操作或卷积层的数量。另外，由于近似的阶数仅为一个，因此分层线性结构对于大规模图是参数经济且高效的。</p>

<h4 id="generalization-of-graph-convolutions">Generalization of Graph Convolutions</h4>
<p>在$x\in\mathbb{R}^n$上定义的图卷积操作$*G$可以被扩展为多维张量。
对于带有$C_i$个channels的$X\in\mathbb{R}^{n\times C_i}$，
图卷积可以用：</p>

\[y_j=\sum_{i=1}^{C_i}\theta_{i,j}(L)x_i\in\mathbb{R}^n,1\le j\le C_o\tag{6}\]

<p>其中，带有$C_i\times C_o$个向量的Chebyshev协方差$\theta_{i,j}\in\mathbb{R}^k(C_i,C_o)$是特征图的输入和输出大小。
对于2-D变量的图卷积被定义为$\theta*G X$，其中$\theta\in\mathbb{R}^{K\times C_i\times C_o}$。
具体来说，交通量预测的输入由图1所示的M个时间片的路图组成。
每个时间片$v_t$可以被看做一个矩阵，其i列是第i个结点的$v_i$中的$C_i$维的值，
对于M的每个时间步t，在$X_t\in\mathbb{R}^{n\times C_i}$上并行执行具有相同核$\theta$的等图卷积运算。
因此，图卷积在3维变量中表示为$\theta*G \chi$，其中$\chi\in\mathbb{R}^{M\times n\times C_i}$。</p>

<h4 id="33-gated-cnns-for-extracting-temporal-features">3.3 Gated CNNs for Extracting Temporal Features</h4>
<p>尽管基于RNN的模型在时间序列分析中得到了广泛的应用，但用于流量预测的递归网络仍然存在迭代耗时、门机制复杂、对动态变化响应慢等问题。
相反，CNNs具有训练速度快、结构简单、无依赖约束等优点。
我们在时间轴上使用整个卷积结构来捕捉交通流的时间动态行为。这种特殊的设计允许通过分层表示的多层卷积结构实现并行和可控的训练过程。</p>

<p>如图2（右）所示，时间卷积层包含一个一维因果卷积，其核宽为$K_t$，其后为门控线性单元(GLU)。
对于图G中的每个结点，时间卷积不需要填充就可以探测输入元素的$K_t$邻域，从而使序列长度每次缩短$K_t-1$。
因此，每个结点的时间卷积的输入可以被看做一个长度为M、channels为$C_i$的序列$Y\in\mathbb{R}^{M\times C_i}$。
卷积核$\Gamma\in\mathbb{R}^{K_t\times C_i\times 2C_o}$被设计来匹配输入Y到单一输出元素$[PQ]\in\mathbb{R}^{(M-K_t+1)\times (2C_o)}$。
P、 Q被分成两半，通道大小相同。因此，时间门卷积可以被定义为：</p>

\[\Gamma *\tau Y=P\odot\sigma(Q)\in\mathbb{R}^{(M-K_t+1)}\times C_o\tag{7}\]

<p>其中，P,Q分别是GLU中的门输入，$\odot$表示Hadamard product。$\sigma(Q)控制当前状态的输入P，
这与发现时间序列的组成结构和动态变化有关。
非线性门也有助于通过叠加的时间层充分利用输入场。此外，在叠加的时间卷积层之间实现残差连接。</p>

<h4 id="34-spatio-temporal-convolutional-block">3.4 Spatio-temporal Convolutional Block</h4>
<p>为了融合时空特征，构造时空卷积块（stconv块）来联合处理图结构时间序列。块本身可以根据特定情况的规模和复杂性进行堆叠或扩展。
如Figure 2(mid)所描述的，中间的空间层是连接两个时间层，通过时间卷积实现图形卷积到时间卷积的快速空间状态传播。
“三明治”结构也有助于网络充分应用瓶颈策略，通过图卷积层对信道C进行降尺度和上尺度压缩，从而实现尺度压缩和特征压缩。
此外，在每个ST-Conv块中使用层标准化来防止过度拟合。</p>

<p>ST-Conv的输入和输出都是3D张量。对于block l的输入$v^l\in\mathbb{R}^{M\times n\times C^l}$，
输出$v^{l+1}\in\mathbb{R}^{(M-2(K_t-1))\times n\times C^{l+1}}$可通过如下计算得到：</p>

\[v^{l+1}=\gamma_1^l*\tau ReLU(\theta^l*G(\gamma_0^l*\tau v^l))\tag{8}\]

<p>其中，$\gamma_0^l,\gamma_1^l$分别是block l的上下时间核。$\theta^l$是图卷积的光谱核(spectral kernel)。
$ReLU(\cdot)$代表矫正线性单元函数。在堆叠两个ST-Conv blocks后，附加一个额外的带有全连接层的时间卷积层用于匹配最后的ST-Conv 
block的输出(见Figure2(left))。时间卷积层将最后ST Conv块的输出映射到单步预测。
然后可以从模型中获得最后的输出$Z\in\mathbb{R}^{n\times c}$并且通过在c个通道上应用线性变换，
计算n个节点的速度预测，如$\hat{v}=Zw+b$，其中$w\in\mathbb{R}^c$是一个带权重的向量，b是偏移量。</p>

<p>使用L2 loss来衡量模型的性能，因此STGCN对于交通预测的loss函数可以被重写为：</p>

\[L(\hat{v};W_{\theta})=\sum_t||\hat{v}(v_t-M+1,\cdots,v_t,W_{\theta})-v_{t+1}||^2\tag{9}\]

<p>其中$W_{\theta}$是模型的可训练参数。$v_{t+1}$是真实值，$\hat{v}(\cdot)$是模型的预测。</p>

<p>STGCN主要特征有如下：</p>

<ul>
  <li>STGCN是一个处理结构化时间序列的通用框架。它不仅可以解决交通网络的建模和预测问题，而且可以应用于更一般的时空序列学习任务。</li>
  <li>时空块结合了图卷积和选通时间卷积，能够提取出最有用的空间特征，并一致地捕捉最本质的时间特征。</li>
  <li>该模型完全由卷积结构组成，因此可以用较少的参数和更快的训练速度实现输入的并行化。更重要的是，这种经济架构允许模型以更高的效率处理大规模网络。</li>
</ul>

<h3 id="四experiment"><span id="p5">四、EXPERIMENT</span></h3>
<h4 id="dataset-description">Dataset Description</h4>
<p>我们分别在北京市交通委员会和加州交通部收集的BJER4和PeMSD7两个实际交通数据集上验证了我们的模型。每个数据集包含交通观测和地理信息的关键属性以及相应的时间戳，如下所述。</p>

<h5 id="bjer4">BJER4</h5>
<p>BJER4是用双环探测器从北京市东四环主要路段采集的。我们在那里选了12条路做实验。每5分钟聚合一次流量。所用时间段为2014年7月1日至8月31日，周末除外。我们选取第一个月的历史速度记录作为训练集，其余的分别作为验证集和测试集。</p>

<h5 id="pemsd7">PeMSD7</h5>
<p>2001年，在加州主要的州际公路上，通过Pemschen等人的测量系统，收集了Pemschen等39个州的传感器系统。数据集还从30秒的数据样本中聚合成5分钟的间隔。我们在加州第七区中随机选取一个中型和大型地震台，分别标注为PeMSD7（M）和PeMSD7（L）作为数据源（如图3左侧所示）。PeMSD7数据集的时间范围为2012年5月和6月的工作日。我们根据与上述相同的原则分割训练集和测试集。</p>

<h4 id="42-data-preprocessing">4.2 Data Preprocessing</h4>
<p>两个数据集中的标准时间间隔设置为5分钟。因此，道路图的每个节点每天包含288个数据点。数据清理后，采用线性插值法来填充缺失值。另外，采用Z评分法对输入数据进行归一化处理。</p>

<p>在BJER4中，利用传感器站配置图构建了北京东四环网的路网拓扑结构。通过整理每条道路的隶属关系、方向和起点-终点，可以将环形路线系统数字化为有向图。</p>

<p>在PeMSD7中，道路图的邻接矩阵是根据交通网络中站点间的距离计算出来的。加权邻接矩阵W可以表示为</p>

<p><img src="../../../../../../img/in-post/2020.09/11/Tag 10.jpg" alt="Tag 10" /></p>

<p>其中，$w_{i,j}$是边的权重，由结点i和j的距离$d_{ij}$决定。$sigma^2$和$\epsilon$是阈值，
用于控制矩阵W的分布与稀疏性，分别赋值为10和0.5。W的可视化显示在图3的右侧。
<img src="../../../../../../img/in-post/2020.09/11/Figure 3.jpg" alt="Figure 3" /></p>

<h4 id="43-experimental-settings">4.3 Experimental Settings</h4>
<p><img src="../../../../../../img/in-post/2020.09/11/Table 1.jpg" alt="Table 1" />
<img src="../../../../../../img/in-post/2020.09/11/Table 2.jpg" alt="Table 2" /></p>
<h4 id="44-experiment-results">4.4 Experiment Results</h4>
<p>实验结果见Table1、2。</p>

<h4 id="benefits-of-spatial-topology">Benefits of Spatial Topology</h4>
<p>以前的方法没有结合空间拓扑结构，以粗粒度的方式对时间序列进行建模。不同的是，通过对传感器的空间拓扑结构进行建模，我们的STGCN模型在短期和中长期预测方面取得了显著的改进。STGCN在数据集PeMSD7上的优势比BJER4更为明显，因为PeMS的传感器网络更加复杂和结构化（如图3所示），我们的模型可以有效地利用空间结构进行更准确的预测。</p>

<p>为了比较三种基于图卷积的方法：GCGRU、STGCN（Cheb）和STGCN（1st），我们展示了它们在早高峰和晚高峰时段的预测，如图4所示。不难看出，我们提出的STGCN比其他方法更准确地捕捉到高峰时段的趋势，并且比其他方法更早地检测到高峰时段的结束。由于有效的图卷积和叠加的时间卷积结构，我们的模型能够快速响应交通网络之间的动态变化，而不会像大多数递归网络那样过度依赖历史平均值。
<img src="../../../../../../img/in-post/2020.09/11/Figure 4.jpg" alt="Figure 4" /></p>
<h4 id="training-efficiency-and-generalization">Training Efficiency and Generalization</h4>
<p><img src="../../../../../../img/in-post/2020.09/11/Table 3.jpg" alt="Table 3" /></p>

<p>为了在我们的提案中看到沿时间轴卷积的好处，我们在表3中总结了STGCN和GCGRU之间训练时间的比较。在公平性方面，在PeMSD7（M）的实验中，GCGRU分为三层，分别为64、64、128个单元，STGCN使用4.3节中描述的默认设置。我们的型号STGCN只需要272秒，而RNN型号的GCGRU在PeMSD7（M）上花费3824秒。这14倍的训练速度的提高主要得益于使用时间卷积而不是递归结构，它可以实现完全并行的训练，而不是像RNN那样完全依赖链结构。对于PeMSD7（L），GCGRU必须使用一半的批处理大小，因为它的GPU消耗超过了单个卡的内存容量（结果在表2中标记为“*”）；而STGCN只需要在ST Conv块中间加倍通道。尽管在这种情况下，我们的模型所消耗的训练时间还不到GCGRU模型的十分之一。同时，由于一阶近似不局限于多项式的参数化，它的优点也显现出来。与STGCN（Cheb）相比，STGCN（1st）模型在较大数据集上的速度提高了20%左右，具有令人满意的性能。</p>

<p>为了进一步研究比较深度学习模型的性能，我们在训练过程中绘制了PeMSD7（M）测试集的RMSE和MAE，见图5。这些数据也表明我们的模型可以实现更快的训练过程和更容易的收敛。由于ST-Conv模块的特殊设计，我们的模型在平衡时间消耗和参数设置方面具有优越的性能。具体来说，STGCN（4.54×105）中的参数只占GCGRU的三分之二左右，比FC-LSTM节省了95%以上的参数。
<img src="../../../../../../img/in-post/2020.09/11/Figure 5.jpg" alt="Figure 5" /></p>
:ET